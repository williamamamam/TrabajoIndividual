// Crea una base de datos llamada tallerMongoDB
use tallerMongoDB

/* Inserta la siguiente información en una colección llamada usuarios:
• Juan Pérez, 30 años, correo: juan.perez@urosario.com
• Ana López, 25 años, correo: ana.lopez@ urosario.com
• Luis Torres, 35 años, correo: luis.torres@ urosario.com*/

db.createCollection("usuarios")

db.usuarios.insertMany([{nombre:"Juan Pérez",edad: 30, correo: "juan.perez@urosario.com"},{nombre:"Ana López",edad: 25, correo: "ana.lopez@urosario.com"
},{nombre:"Luis Torres",edad: 35, correo: "luis.torres@urosario.edu.com"}])

//Encuentra todos los usuarios.
db.usuarios.find()

//Encuentra el usuario con nombre Ana López
db.usuarios.find({nombre:{$eq:"Ana López"}})

//Encuentra todos los usuarios mayores o iguales a 30 años
db.usuarios.find({edad:{$gte:30}})

//Cambia la edad de Juan Pérez a 31 años
db.usuarios.updateOne({nombre:{$eq:"Juan perez"}},{$set:{edad:31}})

//Añade el campo activo: true a todos los usuarios con edad mayor o igual a 30 años
db.usuarios.updateMany({edad:{$gte:30}},{$set:{activo:true}})

// Elimina el usuario Luis Torres
db.usuarios.deleteOne({nombre:{$eq:"Luis Torres"}})

// Elimina todos los usuarios menores de 30 años
db.usuarios.deleteMany({edad:{$lt:30}})

/*Crea una nueva colección llamada productos e inserta al menos 5 productos con los
siguientes campos:
nombre: Nombre del producto.
precio: Precio del producto.
categoria: Categoría del producto (por ejemplo: “Electrónica”, “Hogar”, “Ropa”)*/

db.createCollection("productos")

db.productos.insertMany([{nombre:"Celular",precio:10000,categoria:"Electronica"},{nombre:"Silla",precio:5000,categoria:"Hogar"},
{nombre:"Camiseta",precio:2500,categoria:"Ropa"},{nombre:"Laptop",precio:20000,categoria:"Electronica"},{nombre:"Tapete",precio:1500,categoria:"Hogar"}])

// Encuentra todos los productos con precio mayor a $100.
db.productos.find({precio:{$gt:100}})

// Ordena los productos por precio de manera descendente
db.productos.find().sort({precio:-1})

// Añade un campo en stock con valor true a todos los productos
db.productos.updateMany({},{$set:{"en stock":true}})

// Cambia el valor de en stock a false para los productos cuyo precio sea mayor a $500
db.productos.updateMany({precio:{$gt:500}},{$set:{"en stock":false}})

// Elimina todos los productos cuyo precio sea menor a $50
db.productos.deleteMany({precio:{$lt:500}})

// El precio promedio de los productos agrupados por categoría
db.productos.aggregate([{$group: {_id: "$categoria",precioPromedio:{ $avg: "$precio" }}}])

// La categoría con el mayor precio promedio
db.productos.aggregate([{$group: {_id: "$categoria",precioPromedio: { $avg: "$precio" }}},{$sort: { precioPromedio: -1 }},{$limit: 1}])
